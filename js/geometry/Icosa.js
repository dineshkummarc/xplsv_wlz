// Generated with Blender 2.54 exporter
// http://github.com/mrdoob/three.js/tree/master/utils/exporters/blender

var Icosa = function () {

	var scope = this;

	THREE.Geometry.call( this );

	v( 0.000000, -1.000000, -0.000000 );
	v( 0.723600, -0.447215, 0.525720 );
	v( -0.276385, -0.447215, 0.850640 );
	v( -0.894425, -0.447215, -0.000000 );
	v( -0.276385, -0.447215, -0.850640 );
	v( 0.723600, -0.447215, -0.525720 );
	v( 0.276385, 0.447215, 0.850640 );
	v( -0.723600, 0.447215, 0.525720 );
	v( -0.723600, 0.447215, -0.525720 );
	v( 0.276385, 0.447215, -0.850640 );
	v( 0.894425, 0.447215, -0.000000 );
	v( 0.000000, 1.000000, -0.000000 );
	v( 0.425323, -0.850654, 0.309011 );
	v( -0.162456, -0.850654, 0.499995 );
	v( 0.262869, -0.525738, 0.809012 );
	v( 0.425323, -0.850654, -0.309011 );
	v( 0.850648, -0.525736, -0.000000 );
	v( -0.525730, -0.850652, -0.000000 );
	v( -0.688189, -0.525736, 0.499997 );
	v( -0.162456, -0.850654, -0.499995 );
	v( -0.688189, -0.525736, -0.499997 );
	v( 0.262869, -0.525738, -0.809012 );
	v( 0.951058, 0.000000, -0.309013 );
	v( 0.951058, 0.000000, 0.309013 );
	v( 0.587786, 0.000000, 0.809017 );
	v( 0.000000, 0.000000, 1.000000 );
	v( -0.587786, 0.000000, 0.809017 );
	v( -0.951058, 0.000000, 0.309013 );
	v( -0.951058, 0.000000, -0.309013 );
	v( -0.587786, 0.000000, -0.809017 );
	v( 0.000000, 0.000000, -1.000000 );
	v( 0.587786, 0.000000, -0.809017 );
	v( 0.688189, 0.525736, 0.499997 );
	v( -0.262869, 0.525738, 0.809012 );
	v( -0.850648, 0.525736, -0.000000 );
	v( -0.262869, 0.525738, -0.809012 );
	v( 0.688189, 0.525736, -0.499997 );
	v( 0.525730, 0.850652, -0.000000 );
	v( 0.162456, 0.850654, 0.499995 );
	v( -0.425323, 0.850654, 0.309011 );
	v( -0.425323, 0.850654, -0.309011 );
	v( 0.162456, 0.850654, -0.499995 );

	f3( 14, 12, 1 );
	f3( 12, 14, 13 );
	f3( 2, 13, 14 );
	f3( 13, 0, 12 );
	f3( 16, 1, 12 );
	f3( 12, 15, 16 );
	f3( 5, 16, 15 );
	f3( 12, 0, 15 );
	f3( 18, 13, 2 );
	f3( 13, 18, 17 );
	f3( 3, 17, 18 );
	f3( 17, 0, 13 );
	f3( 20, 17, 3 );
	f3( 17, 20, 19 );
	f3( 4, 19, 20 );
	f3( 19, 0, 17 );
	f3( 21, 19, 4 );
	f3( 19, 21, 15 );
	f3( 5, 15, 21 );
	f3( 15, 0, 19 );
	f3( 23, 1, 16 );
	f3( 16, 22, 23 );
	f3( 10, 23, 22 );
	f3( 22, 16, 5 );
	f3( 25, 2, 14 );
	f3( 14, 24, 25 );
	f3( 6, 25, 24 );
	f3( 24, 14, 1 );
	f3( 27, 3, 18 );
	f3( 18, 26, 27 );
	f3( 7, 27, 26 );
	f3( 26, 18, 2 );
	f3( 29, 4, 20 );
	f3( 20, 28, 29 );
	f3( 8, 29, 28 );
	f3( 28, 20, 3 );
	f3( 31, 5, 21 );
	f3( 21, 30, 31 );
	f3( 9, 31, 30 );
	f3( 30, 21, 4 );
	f3( 32, 23, 10 );
	f3( 23, 32, 24 );
	f3( 6, 24, 32 );
	f3( 24, 1, 23 );
	f3( 33, 25, 6 );
	f3( 25, 33, 26 );
	f3( 7, 26, 33 );
	f3( 26, 2, 25 );
	f3( 34, 27, 7 );
	f3( 27, 34, 28 );
	f3( 8, 28, 34 );
	f3( 28, 3, 27 );
	f3( 35, 29, 8 );
	f3( 29, 35, 30 );
	f3( 9, 30, 35 );
	f3( 30, 4, 29 );
	f3( 36, 31, 9 );
	f3( 31, 36, 22 );
	f3( 10, 22, 36 );
	f3( 22, 5, 31 );
	f3( 38, 6, 32 );
	f3( 32, 37, 38 );
	f3( 11, 38, 37 );
	f3( 37, 32, 10 );
	f3( 39, 7, 33 );
	f3( 33, 38, 39 );
	f3( 11, 39, 38 );
	f3( 38, 33, 6 );
	f3( 40, 8, 34 );
	f3( 34, 39, 40 );
	f3( 11, 40, 39 );
	f3( 39, 34, 7 );
	f3( 41, 9, 35 );
	f3( 35, 40, 41 );
	f3( 11, 41, 40 );
	f3( 40, 35, 8 );
	f3( 37, 10, 36 );
	f3( 36, 41, 37 );
	f3( 11, 37, 41 );
	f3( 41, 36, 9 );

	function v( x, y, z ) {

		scope.vertices.push( new THREE.Vertex( new THREE.Vector3( x, y, z ) ) );

	}

	function f3( a, b, c, nx, ny, nz ) {

		scope.faces.push( new THREE.Face3( a, b, c, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	this.computeCentroids();
	this.computeNormals();

}

Icosa.prototype = new THREE.Geometry();
Icosa.prototype.constructor = Icosa;

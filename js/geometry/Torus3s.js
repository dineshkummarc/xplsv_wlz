// Generated with Blender 2.54 exporter
// http://github.com/mrdoob/three.js/tree/master/utils/exporters/blender

var Torus3s = function () {

	var scope = this;

	THREE.Geometry.call( this );

	v( 0.265625, 0.108253, -0.460076 );
	v( 0.218750, 0.000000, -0.378886 );
	v( 0.265625, -0.108253, -0.460076 );
	v( -0.531250, 0.108253, 0.000000 );
	v( -0.437500, 0.000000, 0.000000 );
	v( -0.531250, -0.108253, 0.000000 );
	v( 0.265625, 0.108253, 0.460076 );
	v( 0.218750, 0.000000, 0.378886 );
	v( 0.265625, -0.108253, 0.460076 );
	v( 0.218750, 0.216506, 0.378886 );
	v( -0.437500, 0.216506, 0.000000 );
	v( 0.218750, 0.216506, -0.378886 );
	v( 0.875000, 0.000000, -0.000000 );
	v( -0.437500, -0.216506, 0.000000 );
	v( 0.218750, -0.216506, -0.378886 );
	v( -0.437500, 0.000000, 0.757772 );
	v( 0.312500, 0.000000, -0.541266 );
	v( 0.218750, -0.216506, 0.378886 );
	v( -0.531250, -0.108253, -0.920152 );
	v( -0.531250, -0.108253, 0.920152 );
	v( -0.437500, 0.000000, -0.757772 );
	v( 1.062500, -0.108253, -0.000000 );
	v( -0.531250, 0.108253, 0.920152 );
	v( -0.531250, 0.108253, -0.920152 );
	v( -0.625000, 0.000000, 0.000000 );
	v( 1.062500, 0.108253, -0.000000 );
	v( 0.312500, 0.000000, 0.541266 );
	v( 1.250000, 0.000000, -0.000000 );
	v( 0.875000, 0.216506, -0.000000 );
	v( 0.875000, -0.216506, -0.000000 );
	v( -0.625000, 0.000000, -1.082532 );
	v( -0.437500, 0.216506, -0.757772 );
	v( -0.437500, -0.216506, -0.757772 );
	v( -0.625000, 0.000000, 1.082532 );
	v( -0.437500, 0.216506, 0.757772 );
	v( -0.437500, -0.216506, 0.757772 );

	f4( 0, 25, 27, 16 );
	f4( 0, 16, 30, 23 );
	f4( 0, 23, 31, 11 );
	f4( 0, 11, 28, 25 );
	f4( 1, 12, 28, 11 );
	f4( 1, 11, 31, 20 );
	f4( 1, 20, 32, 14 );
	f4( 1, 14, 29, 12 );
	f4( 2, 16, 27, 21 );
	f4( 2, 21, 29, 14 );
	f4( 2, 14, 32, 18 );
	f4( 2, 18, 30, 16 );
	f4( 3, 23, 30, 24 );
	f4( 3, 24, 33, 22 );
	f4( 3, 22, 34, 10 );
	f4( 3, 10, 31, 23 );
	f4( 4, 20, 31, 10 );
	f4( 4, 10, 34, 15 );
	f4( 4, 15, 35, 13 );
	f4( 4, 13, 32, 20 );
	f4( 5, 18, 32, 13 );
	f4( 5, 13, 35, 19 );
	f4( 5, 19, 33, 24 );
	f4( 5, 24, 30, 18 );
	f4( 6, 22, 33, 26 );
	f4( 6, 26, 27, 25 );
	f4( 6, 25, 28, 9 );
	f4( 6, 9, 34, 22 );
	f4( 7, 15, 34, 9 );
	f4( 7, 9, 28, 12 );
	f4( 7, 12, 29, 17 );
	f4( 7, 17, 35, 15 );
	f4( 8, 21, 27, 26 );
	f4( 8, 26, 33, 19 );
	f4( 8, 19, 35, 17 );
	f4( 8, 17, 29, 21 );

	function v( x, y, z ) {

		scope.vertices.push( new THREE.Vertex( new THREE.Vector3( x, y, z ) ) );

	}

	function f3( a, b, c, nx, ny, nz ) {

		scope.faces.push( new THREE.Face3( a, b, c, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function f4( a, b, c, d, nx, ny, nz ) {

		scope.faces.push( new THREE.Face4( a, b, c, d, nx && ny && nz ? new THREE.Vector3( nx, ny, nz ) : null ) );

	}

	function uv( u1, v1, u2, v2, u3, v3, u4, v4 ) {

		var uv = [];
		uv.push( new THREE.UV( u1, v1 ) );
		uv.push( new THREE.UV( u2, v2 ) );
		uv.push( new THREE.UV( u3, v3 ) );
		if ( u4 && v4 ) uv.push( new THREE.UV( u4, v4 ) );
		scope.uvs.push( uv );
	}

	this.computeCentroids();
	this.computeNormals();

}

Torus3s.prototype = new THREE.Geometry();
Torus3s.prototype.constructor = Torus3s;